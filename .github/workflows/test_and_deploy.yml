# Useful Links
# Python with Github Actions: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test and Deploy

# Run this workflow on every push or pull request
on:
  - push
  - pull_request

# Uncomment to run this workflow only when a tag is pushed
# Can set custom wildcards instead of '*', like 'v*' for tags starting with v
# NOTE: Releases are only published on tags, see "Release" step below
#on:
#  push:
#    tags:
#      - '*'

# Docs on sharing data between jobs (between VMs): https://help.github.com/en/actions/configuring-and-managing-workflows/persisting-workflow-data-using-artifacts#passing-data-between-jobs-in-a-workflow
jobs:
  # Windows Build
  windows_build:
    name: Windows Build
    runs-on: windows-latest
    steps:
      # Download the repository
      - uses: actions/checkout@v2

      # Restore cacheed cargo files to speed up future Rust builds
      # This follows the example at https://github.com/actions/cache
      # The cache will be saved automatically before the workflow ends
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargoo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargoo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: install_loader/target
          key: ${{ runner.os }}-cargoo-build-target-${{ hashFiles('**/Cargo.lock') }}

      # Configure Rust for 32-bit builds
      - name: Configure Rust for 32-bit
        run: |
          rustup target add i686-pc-windows-msvc
          rustup default stable-i686-pc-windows-msvc

      # Run Python Deploy Script
      - name: Run Deploy Script
        run: python travis_build_script.py
